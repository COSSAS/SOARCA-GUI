package cards

import "fmt"

const (
	reportingMetaCardEndpoint = "/reporting/card/"
)

type ReportingCardData struct {
	Loaded bool
	Name   string
	Value  int
	ID     string
}

templ reportingCardKownComponent(data ReportingCardData) {
	@Card() {
		<div class="space-y-2">
			<div
				class="flex items-center space-x-2 rtl:space-x-reverse text-sm font-medium text-gray-500 dark:text-gray-400"
			>
				<span>{ data.Name } </span>
			</div>
			<div class="text-3xl dark:text-gray-100">
				{ fmt.Sprint(data.Value) }
			</div>
			// <div class="flex items-center space-x-1 rtl:space-x-reverse text-sm font-medium text-green-600">
			//     <span>32k increase</span>
			//     <svg class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
			//         aria-hidden="true">
			//         <path fill-rule="evenodd"
			//             d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z"
			//             clip-rule="evenodd"></path>
			//     </svg>
			// </div>
		</div>
	}
}

templ reportingCardUnkownComponent() {
	@UnkownCard() {
		<div class="space-y-2">
			<div
				class="flex items-center space-x-2 rtl:space-x-reverse text-sm font-medium text-gray-500 dark:text-gray-400"
			>
				<span>unkown </span>
			</div>
			<div class="text-3xl dark:text-gray-100">
				-
			</div>
			<div class="flex items-center space-x-1 rtl:space-x-reverse text-sm font-medium text-green-600">
				<span>32k increase</span>
				<svg
					class="w-4 h-4"
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 20 20"
					fill="currentColor"
					aria-hidden="true"
				>
					<path
						fill-rule="evenodd"
						d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z"
						clip-rule="evenodd"
					></path>
				</svg>
			</div>
		</div>
	}
}

templ ReportingMetricCard(data ReportingCardData) {
	if !data.Loaded {
		<div
			hx-get={ string(templ.URL(fmt.Sprintf(reportingMetaCardEndpoint+"%s", data.ID))) }
			hx-trigger="load, every"
			hx-swap="outerHTML"
			class="relative"
		>
			@reportingCardUnkownComponent()
		</div>
	} else {
		@reportingCardKownComponent(data)
	}
}
